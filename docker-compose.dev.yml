services:
  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:16-3.4
    container_name: gis_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: gis_carbon
      POSTGRES_USER: gis_user
      POSTGRES_PASSWORD: gis_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - gis_network_dev

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: gis_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - gis_network_dev

  # Django Backend (Development)
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile-dev
    container_name: gis_django_dev
    restart: unless-stopped
    environment:
      - DEBUG=1
      - DB_ENGINE=django.db.backends.postgresql
      - DB_DATABASE=gis_carbon
      - DB_USER=gis_user
      - DB_PASSWORD=gis_password
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_ADMIN_EMAIL=admin@admin.com
      - DJANGO_ADMIN_PASSWORD=admin
      - FASTAPI_GEE_URL=http://fastapi:8000
      - DJANGO_ALLOWED_HOSTS=127.0.0.1 localhost 0.0.0.0
    volumes:
      - django_static_dev:/usr/src/static
      - django_media_dev:/usr/src/media
      - ./backend/sv_carbon_removal/:/usr/src/app
      - ./backend/user_id.json:/usr/src/app/user_id.json
      - /Users/miqbalf/gis-carbon-ai/GEE_notebook_Forestry:/usr/src/app/gee_lib:ro
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - gis_network_dev
    command: /usr/src/app/start_dev.sh

  # FastAPI for GEE Tile Service (Development)
  fastapi:
    build:
      context: ./fastapi-gee-service
      dockerfile: Dockerfile
    container_name: gis_fastapi_dev
    restart: unless-stopped
    environment:
      - REDIS_URL=redis://redis:6379/1
      - POSTGRES_URL=postgresql://gis_user:gis_password@postgres:5432/gis_carbon_data
      - GEE_SERVICE_ACCOUNT=iqbalpythonapi@bukit30project.iam.gserviceaccount.com
    volumes:
      - ./backend/user_id.json:/app/user_id.json
      - gee_tiles_cache_dev:/app/cache
      - ./fastapi-gee-service:/app
      - /Users/miqbalf/gis-carbon-ai/GEE_notebook_Forestry:/app/gee_lib:ro
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - gis_network_dev
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # GeoServer
  geoserver:
    image: kartoza/geoserver:2.24.0
    container_name: gis_geoserver_dev
    restart: unless-stopped
    environment:
      - GEOSERVER_ADMIN_PASSWORD=admin
      - GEOSERVER_ADMIN_USER=admin
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
      - GEOSERVER_LOG_LEVEL=DEBUG
      - GEOWEBCACHE_CACHE_DIR=/opt/geoserver/data_dir/gwc
      - GEOSERVER_OPTS=-Xms512m -Xmx2048m
    volumes:
      - geoserver_data_dev:/opt/geoserver/data_dir
    ports:
      - "8080:8080"
    networks:
      - gis_network_dev

  # MapStore (Latest Official Docker Image with PostgreSQL)
  mapstore:
    image: geosolutionsit/mapstore2:v2025.01.02-stable
    container_name: gis_mapstore_dev
    restart: unless-stopped
    environment:
      - CATALINA_OPTS=-Xms512m -Xmx2048m -Dgeostore-ovr=file:///usr/local/tomcat/conf/geostore-datasource-ovr.properties
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
    volumes:
      - ./mapstore/geostore-datasource-ovr-postgres.properties:/usr/local/tomcat/conf/geostore-datasource-ovr.properties
    ports:
      - "8082:8080"
    networks:
      - gis_network_dev
    depends_on:
      - postgres
      - geoserver

  # Jupyter Lab for testing and development (using Django container)
  jupyter:
    build:
      context: ./backend
      dockerfile: Dockerfile-dev
    container_name: gis_jupyter_dev
    restart: unless-stopped
    environment:
      - PYTHONPATH=/usr/src/app:/usr/src/app/gee_lib:/usr/src/app/ex_ante_lib
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=
      - JUPYTER_ALLOW_ROOT=1
    volumes:
      - ./jupyter/notebooks:/usr/src/app/notebooks
      - ./jupyter/data:/usr/src/app/data
      - ./jupyter/shared:/usr/src/app/shared
      - ./backend/user_id.json:/usr/src/app/user_id.json
      - ./GEE_notebook_Forestry:/usr/src/app/gee_lib:ro
      - ./ex_ante:/usr/src/app/ex_ante_lib:ro
    ports:
      - "8888:8888"
    networks:
      - gis_network_dev
    depends_on:
      - postgres
      - redis
      - geoserver
    command: >
      bash -c "
        pip install jupyterlab ipykernel ipywidgets matplotlib seaborn plotly folium python-dotenv &&
        jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root 
        --NotebookApp.token='' --NotebookApp.password='' 
        --NotebookApp.disable_check_xsrf=True --NotebookApp.allow_origin='*' 
        --NotebookApp.allow_remote_access=True --ServerApp.root_dir=/usr/src/app/notebooks
      "

volumes:
  postgres_data_dev:
  redis_data_dev:
  django_static_dev:
  django_media_dev:
  geoserver_data_dev:
  gee_tiles_cache_dev:
  mapstore_data_dev:

networks:
  gis_network_dev:
    driver: bridge
